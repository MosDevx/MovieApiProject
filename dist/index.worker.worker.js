/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@vibrant/color/lib/converter.js":
/*!******************************************************!*\
  !*** ./node_modules/@vibrant/color/lib/converter.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getColorDiffStatus = exports.hexDiff = exports.rgbDiff = exports.deltaE94 = exports.rgbToCIELab = exports.xyzToCIELab = exports.rgbToXyz = exports.hslToRgb = exports.rgbToHsl = exports.rgbToHex = exports.hexToRgb = exports.DELTAE94_DIFF_STATUS = void 0;\nexports.DELTAE94_DIFF_STATUS = {\n  NA: 0,\n  PERFECT: 1,\n  CLOSE: 2,\n  GOOD: 10,\n  SIMILAR: 50\n};\n/**\n * Converts hex string to RGB\n * @param hex - The hex value you with to get the RGB value of\n * @returns an array in the order of `red, green, blue` numerical values\n */\nfunction hexToRgb(hex) {\n  var m = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  if (!m) throw new RangeError(\"'\" + hex + \"' is not a valid hex color\");\n  return [m[1], m[2], m[3]].map(function (s) {\n    return parseInt(s, 16);\n  });\n}\nexports.hexToRgb = hexToRgb;\n/**\n * Given values for an RGB color convert to and return a valid HEX string\n * @param r - Red value in RGB\n * @param g - Green value in RGB\n * @param b - Blue value in RGB\n * @returns a valid hex string with pre-pending pound sign\n */\nfunction rgbToHex(r, g, b) {\n  return '#' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1, 7);\n}\nexports.rgbToHex = rgbToHex;\n/**\n * Given values for an RGB color convert to and return a valid HSL value\n * @param r - Red value in RGB\n * @param g - Green value in RGB\n * @param b - Blue value in RGB\n * @returns an array in the order of `hue, saturation, light` numerical values\n */\nfunction rgbToHsl(r, g, b) {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  var max = Math.max(r, g, b);\n  var min = Math.min(r, g, b);\n  var h = 0;\n  var s = 0;\n  var l = (max + min) / 2;\n  if (max !== min) {\n    var d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n  return [h, s, l];\n}\nexports.rgbToHsl = rgbToHsl;\nfunction hslToRgb(h, s, l) {\n  var r;\n  var g;\n  var b;\n  function hue2rgb(p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n  }\n  if (s === 0) {\n    r = g = b = l;\n  } else {\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n  return [r * 255, g * 255, b * 255];\n}\nexports.hslToRgb = hslToRgb;\nfunction rgbToXyz(r, g, b) {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  r = r > 0.04045 ? Math.pow((r + 0.005) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.005) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.005) / 1.055, 2.4) : b / 12.92;\n  r *= 100;\n  g *= 100;\n  b *= 100;\n  var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  return [x, y, z];\n}\nexports.rgbToXyz = rgbToXyz;\nfunction xyzToCIELab(x, y, z) {\n  var REF_X = 95.047;\n  var REF_Y = 100;\n  var REF_Z = 108.883;\n  x /= REF_X;\n  y /= REF_Y;\n  z /= REF_Z;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  var L = 116 * y - 16;\n  var a = 500 * (x - y);\n  var b = 200 * (y - z);\n  return [L, a, b];\n}\nexports.xyzToCIELab = xyzToCIELab;\nfunction rgbToCIELab(r, g, b) {\n  var _a = rgbToXyz(r, g, b),\n    x = _a[0],\n    y = _a[1],\n    z = _a[2];\n  return xyzToCIELab(x, y, z);\n}\nexports.rgbToCIELab = rgbToCIELab;\nfunction deltaE94(lab1, lab2) {\n  var WEIGHT_L = 1;\n  var WEIGHT_C = 1;\n  var WEIGHT_H = 1;\n  var L1 = lab1[0],\n    a1 = lab1[1],\n    b1 = lab1[2];\n  var L2 = lab2[0],\n    a2 = lab2[1],\n    b2 = lab2[2];\n  var dL = L1 - L2;\n  var da = a1 - a2;\n  var db = b1 - b2;\n  var xC1 = Math.sqrt(a1 * a1 + b1 * b1);\n  var xC2 = Math.sqrt(a2 * a2 + b2 * b2);\n  var xDL = L2 - L1;\n  var xDC = xC2 - xC1;\n  var xDE = Math.sqrt(dL * dL + da * da + db * db);\n  var xDH = Math.sqrt(xDE) > Math.sqrt(Math.abs(xDL)) + Math.sqrt(Math.abs(xDC)) ? Math.sqrt(xDE * xDE - xDL * xDL - xDC * xDC) : 0;\n  var xSC = 1 + 0.045 * xC1;\n  var xSH = 1 + 0.015 * xC1;\n  xDL /= WEIGHT_L;\n  xDC /= WEIGHT_C * xSC;\n  xDH /= WEIGHT_H * xSH;\n  return Math.sqrt(xDL * xDL + xDC * xDC + xDH * xDH);\n}\nexports.deltaE94 = deltaE94;\nfunction rgbDiff(rgb1, rgb2) {\n  var lab1 = rgbToCIELab.apply(undefined, rgb1);\n  var lab2 = rgbToCIELab.apply(undefined, rgb2);\n  return deltaE94(lab1, lab2);\n}\nexports.rgbDiff = rgbDiff;\nfunction hexDiff(hex1, hex2) {\n  var rgb1 = hexToRgb(hex1);\n  var rgb2 = hexToRgb(hex2);\n  return rgbDiff(rgb1, rgb2);\n}\nexports.hexDiff = hexDiff;\nfunction getColorDiffStatus(d) {\n  if (d < exports.DELTAE94_DIFF_STATUS.NA) {\n    return 'N/A';\n  }\n  // Not perceptible by human eyes\n  if (d <= exports.DELTAE94_DIFF_STATUS.PERFECT) {\n    return 'Perfect';\n  }\n  // Perceptible through close observation\n  if (d <= exports.DELTAE94_DIFF_STATUS.CLOSE) {\n    return 'Close';\n  }\n  // Perceptible at a glance\n  if (d <= exports.DELTAE94_DIFF_STATUS.GOOD) {\n    return 'Good';\n  }\n  // Colors are more similar than opposite\n  if (d < exports.DELTAE94_DIFF_STATUS.SIMILAR) {\n    return 'Similar';\n  }\n  return 'Wrong';\n}\nexports.getColorDiffStatus = getColorDiffStatus;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/@vibrant/color/lib/converter.js?");

/***/ }),

/***/ "./node_modules/@vibrant/color/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@vibrant/color/lib/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Swatch = void 0;\nvar converter_1 = __webpack_require__(/*! ./converter */ \"./node_modules/@vibrant/color/lib/converter.js\");\nvar Swatch = /** @class */function () {\n  function Swatch(rgb, population) {\n    this._rgb = rgb;\n    this._population = population;\n  }\n  Swatch.applyFilters = function (colors, filters) {\n    return filters.length > 0 ? colors.filter(function (_a) {\n      var r = _a.r,\n        g = _a.g,\n        b = _a.b;\n      for (var j = 0; j < filters.length; j++) {\n        if (!filters[j](r, g, b, 255)) return false;\n      }\n      return true;\n    }) : colors;\n  };\n  /**\n   * Make a value copy of a swatch based on a previous one. Returns a new Swatch instance\n   * @param {Swatch} swatch\n   */\n  Swatch.clone = function (swatch) {\n    return new Swatch(swatch._rgb, swatch._population);\n  };\n  Object.defineProperty(Swatch.prototype, \"r\", {\n    /**\n     * The red value in the RGB value\n     */\n    get: function () {\n      return this._rgb[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Swatch.prototype, \"g\", {\n    /**\n     * The green value in the RGB value\n     */\n    get: function () {\n      return this._rgb[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Swatch.prototype, \"b\", {\n    /**\n     * The blue value in the RGB value\n     */\n    get: function () {\n      return this._rgb[2];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Swatch.prototype, \"rgb\", {\n    /**\n     * The color value as a rgb value\n     */\n    get: function () {\n      return this._rgb;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Swatch.prototype, \"hsl\", {\n    /**\n     * The color value as a hsl value\n     */\n    get: function () {\n      if (!this._hsl) {\n        var _a = this._rgb,\n          r = _a[0],\n          g = _a[1],\n          b = _a[2];\n        this._hsl = converter_1.rgbToHsl(r, g, b);\n      }\n      return this._hsl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Swatch.prototype, \"hex\", {\n    /**\n     * The color value as a hex string\n     */\n    get: function () {\n      if (!this._hex) {\n        var _a = this._rgb,\n          r = _a[0],\n          g = _a[1],\n          b = _a[2];\n        this._hex = converter_1.rgbToHex(r, g, b);\n      }\n      return this._hex;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Swatch.prototype, \"population\", {\n    get: function () {\n      return this._population;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Get the JSON object for the swatch\n   */\n  Swatch.prototype.toJSON = function () {\n    return {\n      rgb: this.rgb,\n      population: this.population\n    };\n  };\n  /**\n   * Get the color value as a rgb value\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n  Swatch.prototype.getRgb = function () {\n    return this._rgb;\n  };\n  /**\n   * Get the color value as a hsl value\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n  Swatch.prototype.getHsl = function () {\n    return this.hsl;\n  };\n  /**\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n  Swatch.prototype.getPopulation = function () {\n    return this._population;\n  };\n  /**\n   * Get the color value as a hex string\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n  Swatch.prototype.getHex = function () {\n    return this.hex;\n  };\n  Swatch.prototype.getYiq = function () {\n    if (!this._yiq) {\n      var rgb = this._rgb;\n      this._yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n    }\n    return this._yiq;\n  };\n  Object.defineProperty(Swatch.prototype, \"titleTextColor\", {\n    get: function () {\n      if (this._titleTextColor) {\n        this._titleTextColor = this.getYiq() < 200 ? '#fff' : '#000';\n      }\n      return this._titleTextColor;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Swatch.prototype, \"bodyTextColor\", {\n    get: function () {\n      if (this._bodyTextColor) {\n        this._bodyTextColor = this.getYiq() < 150 ? '#fff' : '#000';\n      }\n      return this._bodyTextColor;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Swatch.prototype.getTitleTextColor = function () {\n    return this.titleTextColor;\n  };\n  Swatch.prototype.getBodyTextColor = function () {\n    return this.bodyTextColor;\n  };\n  return Swatch;\n}();\nexports.Swatch = Swatch;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/@vibrant/color/lib/index.js?");

/***/ }),

/***/ "./node_modules/@vibrant/core/lib/pipeline/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@vibrant/core/lib/pipeline/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.BasicPipeline = exports.Stage = void 0;\nvar image_1 = __webpack_require__(/*! @vibrant/image */ \"./node_modules/@vibrant/image/lib/index.js\");\nvar Stage = /** @class */function () {\n  function Stage(pipeline) {\n    this.pipeline = pipeline;\n    this._map = {};\n  }\n  Stage.prototype.names = function () {\n    return Object.keys(this._map);\n  };\n  Stage.prototype.has = function (name) {\n    return !!this._map[name];\n  };\n  Stage.prototype.get = function (name) {\n    return this._map[name];\n  };\n  Stage.prototype.register = function (name, stageFn) {\n    this._map[name] = stageFn;\n    return this.pipeline;\n  };\n  return Stage;\n}();\nexports.Stage = Stage;\nvar BasicPipeline = /** @class */function () {\n  function BasicPipeline() {\n    this.filter = new Stage(this);\n    this.quantizer = new Stage(this);\n    this.generator = new Stage(this);\n  }\n  BasicPipeline.prototype._buildProcessTasks = function (_a) {\n    var _this = this;\n    var filters = _a.filters,\n      quantizer = _a.quantizer,\n      generators = _a.generators;\n    // Support wildcard for generators\n    if (generators.length === 1 && generators[0] === '*') {\n      generators = this.generator.names();\n    }\n    return {\n      filters: filters.map(function (f) {\n        return createTask(_this.filter, f);\n      }),\n      quantizer: createTask(this.quantizer, quantizer),\n      generators: generators.map(function (g) {\n        return createTask(_this.generator, g);\n      })\n    };\n    function createTask(stage, o) {\n      var name;\n      var options;\n      if (typeof o === 'string') {\n        name = o;\n      } else {\n        name = o.name;\n        options = o.options;\n      }\n      return {\n        name: name,\n        fn: stage.get(name),\n        options: options\n      };\n    }\n  };\n  BasicPipeline.prototype.process = function (imageData, opts) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, filters, quantizer, generators, imageFilterData, colors, palettes;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this._buildProcessTasks(opts), filters = _a.filters, quantizer = _a.quantizer, generators = _a.generators;\n            return [4 /*yield*/, this._filterColors(filters, imageData)];\n          case 1:\n            imageFilterData = _b.sent();\n            return [4 /*yield*/, this._generateColors(quantizer, imageFilterData)];\n          case 2:\n            colors = _b.sent();\n            return [4 /*yield*/, this._generatePalettes(generators, colors)];\n          case 3:\n            palettes = _b.sent();\n            return [2 /*return*/, {\n              colors: colors,\n              palettes: palettes\n            }];\n        }\n      });\n    });\n  };\n  BasicPipeline.prototype._filterColors = function (filters, imageData) {\n    return Promise.resolve(image_1.applyFilters(imageData, filters.map(function (_a) {\n      var fn = _a.fn;\n      return fn;\n    })));\n  };\n  BasicPipeline.prototype._generateColors = function (quantizer, imageData) {\n    return Promise.resolve(quantizer.fn(imageData.data, quantizer.options));\n  };\n  BasicPipeline.prototype._generatePalettes = function (generators, colors) {\n    return __awaiter(this, void 0, void 0, function () {\n      var promiseArr;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, Promise.all(generators.map(function (_a) {\n              var fn = _a.fn,\n                options = _a.options;\n              return Promise.resolve(fn(colors, options));\n            }))\n            // Map the values to the expected name\n            ];\n\n          case 1:\n            promiseArr = _a.sent();\n            // Map the values to the expected name\n            return [2 /*return*/, Promise.resolve(promiseArr.reduce(function (promises, promiseVal, i) {\n              promises[generators[i].name] = promiseVal;\n              return promises;\n            }, {}))];\n        }\n      });\n    });\n  };\n  return BasicPipeline;\n}();\nexports.BasicPipeline = BasicPipeline;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/@vibrant/core/lib/pipeline/index.js?");

/***/ }),

/***/ "./node_modules/@vibrant/core/lib/pipeline/worker/host.js":
/*!****************************************************************!*\
  !*** ./node_modules/@vibrant/core/lib/pipeline/worker/host.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar worker_1 = __importDefault(__webpack_require__(/*! @vibrant/worker/lib/worker */ \"./node_modules/@vibrant/worker/lib/worker.js\"));\nfunction runPipelineInWorker(self, pipeline) {\n  worker_1.default(self, function (imageData, opts) {\n    return pipeline.process(imageData, opts);\n  });\n}\nexports[\"default\"] = runPipelineInWorker;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/@vibrant/core/lib/pipeline/worker/host.js?");

/***/ }),

/***/ "./node_modules/@vibrant/generator-default/lib/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@vibrant/generator-default/lib/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar color_1 = __webpack_require__(/*! @vibrant/color */ \"./node_modules/@vibrant/color/lib/index.js\");\nvar converter_1 = __webpack_require__(/*! @vibrant/color/lib/converter */ \"./node_modules/@vibrant/color/lib/converter.js\");\nvar DefaultOpts = {\n  targetDarkLuma: 0.26,\n  maxDarkLuma: 0.45,\n  minLightLuma: 0.55,\n  targetLightLuma: 0.74,\n  minNormalLuma: 0.3,\n  targetNormalLuma: 0.5,\n  maxNormalLuma: 0.7,\n  targetMutesSaturation: 0.3,\n  maxMutesSaturation: 0.4,\n  targetVibrantSaturation: 1.0,\n  minVibrantSaturation: 0.35,\n  weightSaturation: 3,\n  weightLuma: 6.5,\n  weightPopulation: 0.5\n};\nfunction _findMaxPopulation(swatches) {\n  var p = 0;\n  swatches.forEach(function (s) {\n    p = Math.max(p, s.population);\n  });\n  return p;\n}\nfunction _isAlreadySelected(palette, s) {\n  return palette.Vibrant === s || palette.DarkVibrant === s || palette.LightVibrant === s || palette.Muted === s || palette.DarkMuted === s || palette.LightMuted === s;\n}\nfunction _createComparisonValue(saturation, targetSaturation, luma, targetLuma, population, maxPopulation, opts) {\n  function weightedMean() {\n    var values = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      values[_i] = arguments[_i];\n    }\n    var sum = 0;\n    var weightSum = 0;\n    for (var i = 0; i < values.length; i += 2) {\n      var value = values[i];\n      var weight = values[i + 1];\n      sum += value * weight;\n      weightSum += weight;\n    }\n    return sum / weightSum;\n  }\n  function invertDiff(value, targetValue) {\n    return 1 - Math.abs(value - targetValue);\n  }\n  return weightedMean(invertDiff(saturation, targetSaturation), opts.weightSaturation, invertDiff(luma, targetLuma), opts.weightLuma, population / maxPopulation, opts.weightPopulation);\n}\nfunction _findColorVariation(palette, swatches, maxPopulation, targetLuma, minLuma, maxLuma, targetSaturation, minSaturation, maxSaturation, opts) {\n  var max = null;\n  var maxValue = 0;\n  swatches.forEach(function (swatch) {\n    var _a = swatch.hsl,\n      s = _a[1],\n      l = _a[2];\n    if (s >= minSaturation && s <= maxSaturation && l >= minLuma && l <= maxLuma && !_isAlreadySelected(palette, swatch)) {\n      var value = _createComparisonValue(s, targetSaturation, l, targetLuma, swatch.population, maxPopulation, opts);\n      if (max === null || value > maxValue) {\n        max = swatch;\n        maxValue = value;\n      }\n    }\n  });\n  return max;\n}\nfunction _generateVariationColors(swatches, maxPopulation, opts) {\n  var palette = {\n    Vibrant: null,\n    DarkVibrant: null,\n    LightVibrant: null,\n    Muted: null,\n    DarkMuted: null,\n    LightMuted: null\n  };\n  // mVibrantSwatch = findColor(TARGET_NORMAL_LUMA, MIN_NORMAL_LUMA, MAX_NORMAL_LUMA,\n  //     TARGET_VIBRANT_SATURATION, MIN_VIBRANT_SATURATION, 1f)\n  palette.Vibrant = _findColorVariation(palette, swatches, maxPopulation, opts.targetNormalLuma, opts.minNormalLuma, opts.maxNormalLuma, opts.targetVibrantSaturation, opts.minVibrantSaturation, 1, opts);\n  // mLightVibrantSwatch = findColor(TARGET_LIGHT_LUMA, MIN_LIGHT_LUMA, 1f,\n  //     TARGET_VIBRANT_SATURATION, MIN_VIBRANT_SATURATION, 1f)\n  palette.LightVibrant = _findColorVariation(palette, swatches, maxPopulation, opts.targetLightLuma, opts.minLightLuma, 1, opts.targetVibrantSaturation, opts.minVibrantSaturation, 1, opts);\n  // mDarkVibrantSwatch = findColor(TARGET_DARK_LUMA, 0f, MAX_DARK_LUMA,\n  //     TARGET_VIBRANT_SATURATION, MIN_VIBRANT_SATURATION, 1f)\n  palette.DarkVibrant = _findColorVariation(palette, swatches, maxPopulation, opts.targetDarkLuma, 0, opts.maxDarkLuma, opts.targetVibrantSaturation, opts.minVibrantSaturation, 1, opts);\n  // mMutedSwatch = findColor(TARGET_NORMAL_LUMA, MIN_NORMAL_LUMA, MAX_NORMAL_LUMA,\n  //     TARGET_MUTED_SATURATION, 0f, MAX_MUTED_SATURATION)\n  palette.Muted = _findColorVariation(palette, swatches, maxPopulation, opts.targetNormalLuma, opts.minNormalLuma, opts.maxNormalLuma, opts.targetMutesSaturation, 0, opts.maxMutesSaturation, opts);\n  // mLightMutedColor = findColor(TARGET_LIGHT_LUMA, MIN_LIGHT_LUMA, 1f,\n  //     TARGET_MUTED_SATURATION, 0f, MAX_MUTED_SATURATION)\n  palette.LightMuted = _findColorVariation(palette, swatches, maxPopulation, opts.targetLightLuma, opts.minLightLuma, 1, opts.targetMutesSaturation, 0, opts.maxMutesSaturation, opts);\n  // mDarkMutedSwatch = findColor(TARGET_DARK_LUMA, 0f, MAX_DARK_LUMA,\n  //     TARGET_MUTED_SATURATION, 0f, MAX_MUTED_SATURATION)\n  palette.DarkMuted = _findColorVariation(palette, swatches, maxPopulation, opts.targetDarkLuma, 0, opts.maxDarkLuma, opts.targetMutesSaturation, 0, opts.maxMutesSaturation, opts);\n  return palette;\n}\nfunction _generateEmptySwatches(palette, maxPopulation, opts) {\n  if (!palette.Vibrant && !palette.DarkVibrant && !palette.LightVibrant) {\n    if (!palette.DarkVibrant && palette.DarkMuted) {\n      var _a = palette.DarkMuted.hsl,\n        h = _a[0],\n        s = _a[1],\n        l = _a[2];\n      l = opts.targetDarkLuma;\n      palette.DarkVibrant = new color_1.Swatch(converter_1.hslToRgb(h, s, l), 0);\n    }\n    if (!palette.LightVibrant && palette.LightMuted) {\n      var _b = palette.LightMuted.hsl,\n        h = _b[0],\n        s = _b[1],\n        l = _b[2];\n      l = opts.targetDarkLuma;\n      palette.DarkVibrant = new color_1.Swatch(converter_1.hslToRgb(h, s, l), 0);\n    }\n  }\n  if (!palette.Vibrant && palette.DarkVibrant) {\n    var _c = palette.DarkVibrant.hsl,\n      h = _c[0],\n      s = _c[1],\n      l = _c[2];\n    l = opts.targetNormalLuma;\n    palette.Vibrant = new color_1.Swatch(converter_1.hslToRgb(h, s, l), 0);\n  } else if (!palette.Vibrant && palette.LightVibrant) {\n    var _d = palette.LightVibrant.hsl,\n      h = _d[0],\n      s = _d[1],\n      l = _d[2];\n    l = opts.targetNormalLuma;\n    palette.Vibrant = new color_1.Swatch(converter_1.hslToRgb(h, s, l), 0);\n  }\n  if (!palette.DarkVibrant && palette.Vibrant) {\n    var _e = palette.Vibrant.hsl,\n      h = _e[0],\n      s = _e[1],\n      l = _e[2];\n    l = opts.targetDarkLuma;\n    palette.DarkVibrant = new color_1.Swatch(converter_1.hslToRgb(h, s, l), 0);\n  }\n  if (!palette.LightVibrant && palette.Vibrant) {\n    var _f = palette.Vibrant.hsl,\n      h = _f[0],\n      s = _f[1],\n      l = _f[2];\n    l = opts.targetLightLuma;\n    palette.LightVibrant = new color_1.Swatch(converter_1.hslToRgb(h, s, l), 0);\n  }\n  if (!palette.Muted && palette.Vibrant) {\n    var _g = palette.Vibrant.hsl,\n      h = _g[0],\n      s = _g[1],\n      l = _g[2];\n    l = opts.targetMutesSaturation;\n    palette.Muted = new color_1.Swatch(converter_1.hslToRgb(h, s, l), 0);\n  }\n  if (!palette.DarkMuted && palette.DarkVibrant) {\n    var _h = palette.DarkVibrant.hsl,\n      h = _h[0],\n      s = _h[1],\n      l = _h[2];\n    l = opts.targetMutesSaturation;\n    palette.DarkMuted = new color_1.Swatch(converter_1.hslToRgb(h, s, l), 0);\n  }\n  if (!palette.LightMuted && palette.LightVibrant) {\n    var _j = palette.LightVibrant.hsl,\n      h = _j[0],\n      s = _j[1],\n      l = _j[2];\n    l = opts.targetMutesSaturation;\n    palette.LightMuted = new color_1.Swatch(converter_1.hslToRgb(h, s, l), 0);\n  }\n}\nvar DefaultGenerator = function (swatches, opts) {\n  opts = Object.assign({}, DefaultOpts, opts);\n  var maxPopulation = _findMaxPopulation(swatches);\n  var palette = _generateVariationColors(swatches, maxPopulation, opts);\n  _generateEmptySwatches(palette, maxPopulation, opts);\n  return palette;\n};\nexports[\"default\"] = DefaultGenerator;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/@vibrant/generator-default/lib/index.js?");

/***/ }),

/***/ "./node_modules/@vibrant/image/lib/histogram.js":
/*!******************************************************!*\
  !*** ./node_modules/@vibrant/image/lib/histogram.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar Histogram = /** @class */function () {\n  function Histogram(pixels, opts) {\n    this.pixels = pixels;\n    this.opts = opts;\n    var sigBits = opts.sigBits;\n    var getColorIndex = function (r, g, b) {\n      return (r << 2 * sigBits) + (g << sigBits) + b;\n    };\n    this.getColorIndex = getColorIndex;\n    var rshift = 8 - sigBits;\n    var hn = 1 << 3 * sigBits;\n    var hist = new Uint32Array(hn);\n    var rmax;\n    var rmin;\n    var gmax;\n    var gmin;\n    var bmax;\n    var bmin;\n    var r;\n    var g;\n    var b;\n    var a;\n    rmax = gmax = bmax = 0;\n    rmin = gmin = bmin = Number.MAX_VALUE;\n    var n = pixels.length / 4;\n    var i = 0;\n    while (i < n) {\n      var offset = i * 4;\n      i++;\n      r = pixels[offset + 0];\n      g = pixels[offset + 1];\n      b = pixels[offset + 2];\n      a = pixels[offset + 3];\n      // Ignored pixels' alpha is marked as 0 in filtering stage\n      if (a === 0) continue;\n      r = r >> rshift;\n      g = g >> rshift;\n      b = b >> rshift;\n      var index = getColorIndex(r, g, b);\n      hist[index] += 1;\n      if (r > rmax) rmax = r;\n      if (r < rmin) rmin = r;\n      if (g > gmax) gmax = g;\n      if (g < gmin) gmin = g;\n      if (b > bmax) bmax = b;\n      if (b < bmin) bmin = b;\n    }\n    this._colorCount = hist.reduce(function (total, c) {\n      return c > 0 ? total + 1 : total;\n    }, 0);\n    this.hist = hist;\n    this.rmax = rmax;\n    this.rmin = rmin;\n    this.gmax = gmax;\n    this.gmin = gmin;\n    this.bmax = bmax;\n    this.bmin = bmin;\n  }\n  Object.defineProperty(Histogram.prototype, \"colorCount\", {\n    get: function () {\n      return this._colorCount;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Histogram;\n}();\nexports[\"default\"] = Histogram;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/@vibrant/image/lib/histogram.js?");

/***/ }),

/***/ "./node_modules/@vibrant/image/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@vibrant/image/lib/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.applyFilters = exports.ImageBase = void 0;\nvar ImageBase = /** @class */function () {\n  function ImageBase() {}\n  ImageBase.prototype.scaleDown = function (opts) {\n    var width = this.getWidth();\n    var height = this.getHeight();\n    var ratio = 1;\n    if (opts.maxDimension > 0) {\n      var maxSide = Math.max(width, height);\n      if (maxSide > opts.maxDimension) ratio = opts.maxDimension / maxSide;\n    } else {\n      ratio = 1 / opts.quality;\n    }\n    if (ratio < 1) this.resize(width * ratio, height * ratio, ratio);\n  };\n  return ImageBase;\n}();\nexports.ImageBase = ImageBase;\nfunction applyFilters(imageData, filters) {\n  if (filters.length > 0) {\n    var pixels = imageData.data;\n    var n = pixels.length / 4;\n    var offset = void 0;\n    var r = void 0;\n    var g = void 0;\n    var b = void 0;\n    var a = void 0;\n    for (var i = 0; i < n; i++) {\n      offset = i * 4;\n      r = pixels[offset + 0];\n      g = pixels[offset + 1];\n      b = pixels[offset + 2];\n      a = pixels[offset + 3];\n      // Mark ignored color\n      for (var j = 0; j < filters.length; j++) {\n        if (!filters[j](r, g, b, a)) {\n          pixels[offset + 3] = 0;\n          break;\n        }\n      }\n    }\n  }\n  return imageData;\n}\nexports.applyFilters = applyFilters;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/@vibrant/image/lib/index.js?");

/***/ }),

/***/ "./node_modules/@vibrant/quantizer-mmcq/lib/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@vibrant/quantizer-mmcq/lib/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar color_1 = __webpack_require__(/*! @vibrant/color */ \"./node_modules/@vibrant/color/lib/index.js\");\nvar vbox_1 = __importDefault(__webpack_require__(/*! ./vbox */ \"./node_modules/@vibrant/quantizer-mmcq/lib/vbox.js\"));\nvar pqueue_1 = __importDefault(__webpack_require__(/*! ./pqueue */ \"./node_modules/@vibrant/quantizer-mmcq/lib/pqueue.js\"));\nvar fractByPopulations = 0.75;\nfunction _splitBoxes(pq, target) {\n  var lastSize = pq.size();\n  while (pq.size() < target) {\n    var vbox = pq.pop();\n    if (vbox && vbox.count() > 0) {\n      var _a = vbox.split(),\n        vbox1 = _a[0],\n        vbox2 = _a[1];\n      pq.push(vbox1);\n      if (vbox2 && vbox2.count() > 0) pq.push(vbox2);\n      // No more new boxes, converged\n      if (pq.size() === lastSize) {\n        break;\n      } else {\n        lastSize = pq.size();\n      }\n    } else {\n      break;\n    }\n  }\n}\nvar MMCQ = function (pixels, opts) {\n  if (pixels.length === 0 || opts.colorCount < 2 || opts.colorCount > 256) {\n    throw new Error('Wrong MMCQ parameters');\n  }\n  var vbox = vbox_1.default.build(pixels);\n  var colorCount = vbox.histogram.colorCount;\n  var pq = new pqueue_1.default(function (a, b) {\n    return a.count() - b.count();\n  });\n  pq.push(vbox);\n  // first set of colors, sorted by population\n  _splitBoxes(pq, fractByPopulations * opts.colorCount);\n  // Re-order\n  var pq2 = new pqueue_1.default(function (a, b) {\n    return a.count() * a.volume() - b.count() * b.volume();\n  });\n  pq2.contents = pq.contents;\n  // next set - generate the median cuts using the (npix * vol) sorting.\n  _splitBoxes(pq2, opts.colorCount - pq2.size());\n  // calculate the actual colors\n  return generateSwatches(pq2);\n};\nfunction generateSwatches(pq) {\n  var swatches = [];\n  while (pq.size()) {\n    var v = pq.pop();\n    var color = v.avg();\n    var r = color[0],\n      g = color[1],\n      b = color[2];\n    swatches.push(new color_1.Swatch(color, v.count()));\n  }\n  return swatches;\n}\nexports[\"default\"] = MMCQ;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/@vibrant/quantizer-mmcq/lib/index.js?");

/***/ }),

/***/ "./node_modules/@vibrant/quantizer-mmcq/lib/pqueue.js":
/*!************************************************************!*\
  !*** ./node_modules/@vibrant/quantizer-mmcq/lib/pqueue.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar PQueue = /** @class */function () {\n  function PQueue(comparator) {\n    this._comparator = comparator;\n    this.contents = [];\n    this._sorted = false;\n  }\n  PQueue.prototype._sort = function () {\n    if (!this._sorted) {\n      this.contents.sort(this._comparator);\n      this._sorted = true;\n    }\n  };\n  PQueue.prototype.push = function (item) {\n    this.contents.push(item);\n    this._sorted = false;\n  };\n  PQueue.prototype.peek = function (index) {\n    this._sort();\n    index = typeof index === 'number' ? index : this.contents.length - 1;\n    return this.contents[index];\n  };\n  PQueue.prototype.pop = function () {\n    this._sort();\n    return this.contents.pop();\n  };\n  PQueue.prototype.size = function () {\n    return this.contents.length;\n  };\n  PQueue.prototype.map = function (mapper) {\n    this._sort();\n    return this.contents.map(mapper);\n  };\n  return PQueue;\n}();\nexports[\"default\"] = PQueue;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/@vibrant/quantizer-mmcq/lib/pqueue.js?");

/***/ }),

/***/ "./node_modules/@vibrant/quantizer-mmcq/lib/vbox.js":
/*!**********************************************************!*\
  !*** ./node_modules/@vibrant/quantizer-mmcq/lib/vbox.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar histogram_1 = __importDefault(__webpack_require__(/*! @vibrant/image/lib/histogram */ \"./node_modules/@vibrant/image/lib/histogram.js\"));\nvar SIGBITS = 5;\nvar RSHIFT = 8 - SIGBITS;\nvar VBox = /** @class */function () {\n  function VBox(r1, r2, g1, g2, b1, b2, histogram) {\n    this.histogram = histogram;\n    this._volume = -1;\n    this._count = -1;\n    // NOTE: dimension will be mutated by split operation.\n    //       It must be specified explicitly, not from histogram\n    this.dimension = {\n      r1: r1,\n      r2: r2,\n      g1: g1,\n      g2: g2,\n      b1: b1,\n      b2: b2\n    };\n  }\n  VBox.build = function (pixels) {\n    var h = new histogram_1.default(pixels, {\n      sigBits: SIGBITS\n    });\n    var rmin = h.rmin,\n      rmax = h.rmax,\n      gmin = h.gmin,\n      gmax = h.gmax,\n      bmin = h.bmin,\n      bmax = h.bmax;\n    return new VBox(rmin, rmax, gmin, gmax, bmin, bmax, h);\n  };\n  VBox.prototype.invalidate = function () {\n    this._volume = this._count = -1;\n    this._avg = null;\n  };\n  VBox.prototype.volume = function () {\n    if (this._volume < 0) {\n      var _a = this.dimension,\n        r1 = _a.r1,\n        r2 = _a.r2,\n        g1 = _a.g1,\n        g2 = _a.g2,\n        b1 = _a.b1,\n        b2 = _a.b2;\n      this._volume = (r2 - r1 + 1) * (g2 - g1 + 1) * (b2 - b1 + 1);\n    }\n    return this._volume;\n  };\n  VBox.prototype.count = function () {\n    if (this._count < 0) {\n      var _a = this.histogram,\n        hist = _a.hist,\n        getColorIndex = _a.getColorIndex;\n      var _b = this.dimension,\n        r1 = _b.r1,\n        r2 = _b.r2,\n        g1 = _b.g1,\n        g2 = _b.g2,\n        b1 = _b.b1,\n        b2 = _b.b2;\n      var c = 0;\n      for (var r = r1; r <= r2; r++) {\n        for (var g = g1; g <= g2; g++) {\n          for (var b = b1; b <= b2; b++) {\n            var index = getColorIndex(r, g, b);\n            c += hist[index];\n          }\n        }\n      }\n      this._count = c;\n    }\n    return this._count;\n  };\n  VBox.prototype.clone = function () {\n    var histogram = this.histogram;\n    var _a = this.dimension,\n      r1 = _a.r1,\n      r2 = _a.r2,\n      g1 = _a.g1,\n      g2 = _a.g2,\n      b1 = _a.b1,\n      b2 = _a.b2;\n    return new VBox(r1, r2, g1, g2, b1, b2, histogram);\n  };\n  VBox.prototype.avg = function () {\n    if (!this._avg) {\n      var _a = this.histogram,\n        hist = _a.hist,\n        getColorIndex = _a.getColorIndex;\n      var _b = this.dimension,\n        r1 = _b.r1,\n        r2 = _b.r2,\n        g1 = _b.g1,\n        g2 = _b.g2,\n        b1 = _b.b1,\n        b2 = _b.b2;\n      var ntot = 0;\n      var mult = 1 << 8 - SIGBITS;\n      var rsum = void 0;\n      var gsum = void 0;\n      var bsum = void 0;\n      rsum = gsum = bsum = 0;\n      for (var r = r1; r <= r2; r++) {\n        for (var g = g1; g <= g2; g++) {\n          for (var b = b1; b <= b2; b++) {\n            var index = getColorIndex(r, g, b);\n            var h = hist[index];\n            ntot += h;\n            rsum += h * (r + 0.5) * mult;\n            gsum += h * (g + 0.5) * mult;\n            bsum += h * (b + 0.5) * mult;\n          }\n        }\n      }\n      if (ntot) {\n        this._avg = [~~(rsum / ntot), ~~(gsum / ntot), ~~(bsum / ntot)];\n      } else {\n        this._avg = [~~(mult * (r1 + r2 + 1) / 2), ~~(mult * (g1 + g2 + 1) / 2), ~~(mult * (b1 + b2 + 1) / 2)];\n      }\n    }\n    return this._avg;\n  };\n  VBox.prototype.contains = function (rgb) {\n    var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2];\n    var _a = this.dimension,\n      r1 = _a.r1,\n      r2 = _a.r2,\n      g1 = _a.g1,\n      g2 = _a.g2,\n      b1 = _a.b1,\n      b2 = _a.b2;\n    r >>= RSHIFT;\n    g >>= RSHIFT;\n    b >>= RSHIFT;\n    return r >= r1 && r <= r2 && g >= g1 && g <= g2 && b >= b1 && b <= b2;\n  };\n  VBox.prototype.split = function () {\n    var _a = this.histogram,\n      hist = _a.hist,\n      getColorIndex = _a.getColorIndex;\n    var _b = this.dimension,\n      r1 = _b.r1,\n      r2 = _b.r2,\n      g1 = _b.g1,\n      g2 = _b.g2,\n      b1 = _b.b1,\n      b2 = _b.b2;\n    var count = this.count();\n    if (!count) return [];\n    if (count === 1) return [this.clone()];\n    var rw = r2 - r1 + 1;\n    var gw = g2 - g1 + 1;\n    var bw = b2 - b1 + 1;\n    var maxw = Math.max(rw, gw, bw);\n    var accSum = null;\n    var sum;\n    var total;\n    sum = total = 0;\n    var maxd = null;\n    if (maxw === rw) {\n      maxd = 'r';\n      accSum = new Uint32Array(r2 + 1);\n      for (var r = r1; r <= r2; r++) {\n        sum = 0;\n        for (var g = g1; g <= g2; g++) {\n          for (var b = b1; b <= b2; b++) {\n            var index = getColorIndex(r, g, b);\n            sum += hist[index];\n          }\n        }\n        total += sum;\n        accSum[r] = total;\n      }\n    } else if (maxw === gw) {\n      maxd = 'g';\n      accSum = new Uint32Array(g2 + 1);\n      for (var g = g1; g <= g2; g++) {\n        sum = 0;\n        for (var r = r1; r <= r2; r++) {\n          for (var b = b1; b <= b2; b++) {\n            var index = getColorIndex(r, g, b);\n            sum += hist[index];\n          }\n        }\n        total += sum;\n        accSum[g] = total;\n      }\n    } else {\n      maxd = 'b';\n      accSum = new Uint32Array(b2 + 1);\n      for (var b = b1; b <= b2; b++) {\n        sum = 0;\n        for (var r = r1; r <= r2; r++) {\n          for (var g = g1; g <= g2; g++) {\n            var index = getColorIndex(r, g, b);\n            sum += hist[index];\n          }\n        }\n        total += sum;\n        accSum[b] = total;\n      }\n    }\n    var splitPoint = -1;\n    var reverseSum = new Uint32Array(accSum.length);\n    for (var i = 0; i < accSum.length; i++) {\n      var d = accSum[i];\n      if (splitPoint < 0 && d > total / 2) splitPoint = i;\n      reverseSum[i] = total - d;\n    }\n    var vbox = this;\n    function doCut(d) {\n      var dim1 = d + '1';\n      var dim2 = d + '2';\n      var d1 = vbox.dimension[dim1];\n      var d2 = vbox.dimension[dim2];\n      var vbox1 = vbox.clone();\n      var vbox2 = vbox.clone();\n      var left = splitPoint - d1;\n      var right = d2 - splitPoint;\n      if (left <= right) {\n        d2 = Math.min(d2 - 1, ~~(splitPoint + right / 2));\n        d2 = Math.max(0, d2);\n      } else {\n        d2 = Math.max(d1, ~~(splitPoint - 1 - left / 2));\n        d2 = Math.min(vbox.dimension[dim2], d2);\n      }\n      while (!accSum[d2]) d2++;\n      var c2 = reverseSum[d2];\n      while (!c2 && accSum[d2 - 1]) c2 = reverseSum[--d2];\n      vbox1.dimension[dim2] = d2;\n      vbox2.dimension[dim1] = d2 + 1;\n      return [vbox1, vbox2];\n    }\n    return doCut(maxd);\n  };\n  return VBox;\n}();\nexports[\"default\"] = VBox;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/@vibrant/quantizer-mmcq/lib/vbox.js?");

/***/ }),

/***/ "./node_modules/@vibrant/worker/lib/worker.js":
/*!****************************************************!*\
  !*** ./node_modules/@vibrant/worker/lib/worker.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nfunction runInWorker(self, fn) {\n  self.onmessage = function (event) {\n    var data = event.data;\n    var id = data.id,\n      payload = data.payload;\n    var response;\n    Promise.resolve(fn.apply(void 0, payload)).then(function (ret) {\n      self.postMessage({\n        id: id,\n        type: 'return',\n        payload: ret\n      });\n    }).catch(function (e) {\n      self.postMessage({\n        id: id,\n        type: 'error',\n        payload: e.message\n      });\n    });\n  };\n}\nexports[\"default\"] = runInWorker;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/@vibrant/worker/lib/worker.js?");

/***/ }),

/***/ "./node_modules/node-vibrant/lib/pipeline/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/node-vibrant/lib/pipeline/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar quantizer_mmcq_1 = __importDefault(__webpack_require__(/*! @vibrant/quantizer-mmcq */ \"./node_modules/@vibrant/quantizer-mmcq/lib/index.js\"));\nvar generator_default_1 = __importDefault(__webpack_require__(/*! @vibrant/generator-default */ \"./node_modules/@vibrant/generator-default/lib/index.js\"));\nvar pipeline_1 = __webpack_require__(/*! @vibrant/core/lib/pipeline */ \"./node_modules/@vibrant/core/lib/pipeline/index.js\");\nvar pipeline = new pipeline_1.BasicPipeline().filter.register('default', function (r, g, b, a) {\n  return a >= 125 && !(r > 250 && g > 250 && b > 250);\n}).quantizer.register('mmcq', quantizer_mmcq_1.default).generator.register('default', generator_default_1.default);\nexports[\"default\"] = pipeline;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/node-vibrant/lib/pipeline/index.js?");

/***/ }),

/***/ "./node_modules/node-vibrant/lib/pipeline/index.worker.js":
/*!****************************************************************!*\
  !*** ./node_modules/node-vibrant/lib/pipeline/index.worker.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar host_1 = __importDefault(__webpack_require__(/*! @vibrant/core/lib/pipeline/worker/host */ \"./node_modules/@vibrant/core/lib/pipeline/worker/host.js\"));\nvar _1 = __importDefault(__webpack_require__(/*! ./ */ \"./node_modules/node-vibrant/lib/pipeline/index.js\"));\nhost_1.default(self, _1.default);\n//# sourceMappingURL=index.worker.js.map\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/node-vibrant/lib/pipeline/index.worker.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./node_modules/node-vibrant/lib/pipeline/index.worker.js");
/******/ 	
/******/ })()
;